@use 'sass:math';

@function rem($size) {
	$remValue: math.div($size, 16);
	$roundedValue: decimal-round($remValue, 3) * 1rem;

	@return $roundedValue;
}

@function relative($size, $width: 1440) {
	$relativeValue: math.div($size, $width);
	$roundedValue: decimal-round($relativeValue * 100, 3);

	@return $roundedValue;
}

@function decimal-round($number, $digits: 0, $mode: round) {
	$n: 1;

	// $number must be a number
	@if type-of($number) !=number {
		@warn '#{ $number } is not a number.';
		@return $number;
	}

	// $digits must be a unitless number
	@if type-of($digits) !=number {
		@warn '#{ $digits } is not a number.';
		@return $number;
	} @else if not unitless($digits) {
		@warn '#{ $digits } has a unit.';
		@return $number;
	}

	@if $digits >0 {
		@for $i from 1 through $digits {
			$n: $n * 10;
		}
	}

	@if $mode ==round {
		@return math.div(math.round($number * $n), $n);
	} @else if $mode ==ceil {
		@return math.div(math.ceil($number * $n), $n);
	} @else if $mode ==floor {
		@return math.div(math.floor($number * $n), $n);
	} @else {
		@warn '#{ $mode } is undefined keyword.';
		@return $number;
	}
}
